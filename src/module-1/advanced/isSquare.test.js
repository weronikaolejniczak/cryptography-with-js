const isSquare = require('./isSquare');

const TESTS = [
    [[1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0], 'no'],
    [[1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0], 'yes'],
    [[1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], 'no'],
    [[1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], 'no'],
    [[1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0], 'yes'],
    [[1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0], 'yes'],
    [[1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1], 'yes'],
    [[1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], 'yes'],
    [[1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1], 'no'],
    [[1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], 'no'],
    [[1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], 'yes'],
    [[1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0], 'no'],
    [[1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], 'no'],
    [[1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], 'yes'],
    [[1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], 'yes'],
    [[1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], 'no'],
    [[1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], 'no'],
    [[1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0], 'yes'],
    [[1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 1, 1, 0, 1, 1, 1], 'no'],
    [[1, 0, 0, 1, 1, 1, 0, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1], 'no']
];

for (let i = 0; i < TESTS.length; i++) {
    let p = TESTS[i][0];
    let m = TESTS[i][1];
    let result = TESTS[i][2];

    test(
        result == 'yes'
        ? `expect [${m.toString()}] to be square modulo [${p.toString()}]`
        : `expect [${m.toString()}] to NOT be square modulo [${p.toString()}]`,
      () => {
        let isSquareResult = isSquare(p, m).toString();

        expect(isSquareResult).toBe(result.toString());
    });
}
